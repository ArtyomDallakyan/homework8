# Write a lambda function called add that takes two numbers as arguments and returns their sum.

  add = lambda x, y: x + y
  print(add(5,7)) 



# Implement zip function

  def zip_lists(list1, list2):
    zipped_list = []
    for i in range(min(len(list1), len(list2))):
        zipped_list.append((list1[i], list2[i]))
    return zipped_list
    
  print(zip_lists([1,2,4],[3,5,7,8]))   


# Implement filter function

  def my_filter(function, iterable):
    filtered_list = []
    for item in iterable:
        if function(item):
            filtered_list.append(item)
    return filtered_list
    
   #print(my_filter(function, iterable))   


# Implement enumerate function

  def enumerate_func(iterable, start=0):
    index = start
    for element in iterable:
        yield index, element
        index += 1


# Implement map function

  def my_map(function, iterable):
    result = []
    for item in iterable:
        result.append(function(item))
    return result


# Write a function called counter that returns a closure. The closure should keep track of the number of times it has been called and return that count.

  def counter():
    count = 0
    def inner():
        nonlocal count
        count += 1
        return count
    return inner








    
    
